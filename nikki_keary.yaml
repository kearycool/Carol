# 必读！！！
# 注意规则在满足自己需求情况下，尽量做到精简，不要过度复杂，以免影响性能。
# 跑裸核用户请自行去掉下方控制面板模块的注释。
# 机场订阅
proxy-providers:
  Airport1:
    url: "Mihomo订阅连接"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连
    #override:
      #dialer-proxy: 🇭🇰 香港节点
    #payload:
      #- {"name":"香港落地1", "type":"ss","server":"23.175.201.164","port":80,"cipher":"2022-blake3-aes-128-gcm","password":"UETm2mAIRiCaVJuIe1t0cA==","udp":true}
      #- { name: "香港落地2", type: "ss" }

# 节点信息
proxies:
  - {name: 直连, type: direct}

# 全局配置 
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
log-level: warning
find-process-mode: 'off'
# interface-name: en0
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false
profile:
  store-selected: true
  store-fake-ip: true

# 控制面板，external-ui 路径如果出现报错，根据你使用的插件进行调整，比如openclash改为： /etc/openclash/run  ，裸核跑改为/etc/mihomo/run
# 因容易造成新手面板启动问题，我注释掉了，需要的自行开启
#external-controller: 0.0.0.0:9090
#secret: ""
#external-ui: "/etc/nikki/run"
#external-ui-name: zashboard
#external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# 嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"

# 入站  
tun:
  enable: true
  # system/gvisor/mixed
  stack: mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# DNS模块
dns:
  enable: true
  prefer-h3: true
  listen: 0.0.0.0:1053
  ipv6: false
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter:
    - "*"
    - +.lan
  default-nameserver:
    - 223.5.5.5
    - 223.6.6.6
  nameserver:
    - https://223.5.5.5/dns-query
    - https://223.6.6.6/dns-query
 
# 出站策略，根据自己情况调整每个策略里分组排序，增删都可以，比如把美国自动放到第一个，比如删除香港故转，注意别漏掉表情逗号等。
# 如果相应分组没有筛选到对应的国家，请根据自己节点名字调整筛选关键字。
# 没有再使用锚点，是考虑很多新手修改难度，这样新手修改某个分组更容易些。
proxy-groups:
  - {name: 🚀 节点选择, type: select, proxies: [🇯🇵 日本落地, ♻️ 自动选择, ♻️ 自建代理, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 美国自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: 🚀 手动切换, type: select, include-all: true}
  - {name: ♻️ 自动选择, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "^((?!(直连)).)*$"}
  - {name: 📲 电报消息, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: 💬 OpenAi, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: 💬 Claude, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: 💬 Gemini, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: 🎥 Emby, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: 📹 油管视频, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: 🎥 奈飞视频, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: 📺 巴哈姆特, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动]}
  - {name: 📺 哔哩哔哩, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 香港自动, 直连]}
  - {name: 🌍 国外媒体, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: 🌏 国内媒体, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: 📢 谷歌FCM, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: Ⓜ️ 微软Bing, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: Ⓜ️ 微软云盘, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: Ⓜ️ 微软服务, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: 🍎Twitter, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: 🍎 苹果服务, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: 🎮 游戏平台, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: 🎶 网易音乐, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: 🎯 直连, type: select, proxies: [直连, 🚀 节点选择]}
  - {name: 🛑 广告拦截, type: select, proxies: [直连, REJECT]}
  - {name: 🍃 应用净化, type: select, proxies: [直连, REJECT]}
  - {name: 🐟 漏网之鱼, type: select, proxies: [🚀 节点选择, 🇯🇵 日本落地, ♻️ 自动选择, ♻️ 自建代理, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🚀 手动切换, 直连]}
  - {name: ♻️ 自建代理, type: select, include-all: true, filter: "(?=.*(AWS|Azure|自建))^((?!(落地|台|韩|新|美)).)*$"}
  - {name: 🇭🇰 香港节点, type: select, include-all: true, filter: "(?=.*(港|HK|(?i)Hong))^((?!(落地|自建|台|日|韩|新|深|美)).)*$"}
  - {name: 🇯🇵 日本节点, type: select, include-all: true, filter: "(?=.*(日本|JPG|(?i)Japan))^((?!(落地|自建|港|台|韩|新|美)).)*$"}
  - {name: 🇸🇬 狮城节点, type: select, include-all: true, filter: "(?=.*(新加坡|坡|狮城|SG|Singapore))^((?!(落地|自建|台|日|韩|深|美)).)*$"}
  - {name: 🇺🇲 美国节点, type: select, include-all: true, filter: "(?=.*(美|US|(?i)States|America))^((?!(落地|自建|港|台|韩|新|日)).)*$"}
  - {name: 🇯🇵 日本落地, type: select, include-all: true, filter: "(?=.*(自建节点))^((?!(台|日|韩|新|深|美)).)*$"}
  - {name: ♻️ 香港自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$"}
  - {name: ♻️ 日本自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$"}
  - {name: ♻️ 狮城自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(新加坡|坡|狮城|SG|Singapore))^((?!(港|台|韩|日|美)).)*$"}
  - {name: ♻️ 美国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(美|US|(?i)States|America))^((?!(港|台|日|韩|新)).)*$"}
  
  

# 规则匹配
# 此规则部分没有做防泄露处理，因为弊严重大于利！
rule-providers:
  LocalAreaNetwork:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/LocalAreaNetwork.list
    path: ./ruleset/LocalAreaNetwork.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  UnBan:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/UnBan.list
    path: ./ruleset/UnBan.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  BanAD:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/BanAD.list
    path: ./ruleset/BanAD.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  BanProgramAD:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/BanProgramAD.list
    path: ./ruleset/BanProgramAD.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  GoogleFCM:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Ruleset/GoogleFCM.list
    path: ./ruleset/GoogleFCM.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  GoogleCN:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/GoogleCN.list
    path: ./ruleset/GoogleCN.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  SteamCN:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Ruleset/SteamCN.list
    path: ./ruleset/SteamCN.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  Bing:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Bing.list
    path: ./ruleset/Bing.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  OneDrive:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/OneDrive.list
    path: ./ruleset/OneDrive.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  Microsoft:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Microsoft.list
    path: ./ruleset/Microsoft.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  Apple:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Apple.list
    path: ./ruleset/Apple.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  Twitter:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Twitter/Twitter.list
    path: ./ruleset/Twitter.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  Telegram:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Telegram.list
    path: ./ruleset/Telegram.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  OpenAi:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Ruleset/OpenAi.list
    path: ./ruleset/OpenAi.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  Claude:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Ruleset/Claude.list
    path: ./ruleset/Claude.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  Gemini:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Ruleset/Gemini.list
    path: ./ruleset/Gemini.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  Emby:
    url: https://raw.githubusercontent.com/kearycool/clash/refs/heads/main/Rule-list/Emby.list
    path: ./ruleset/Emby.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  NetEaseMusic:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Ruleset/NetEaseMusic.list
    path: ./ruleset/NetEaseMusic.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  Epic:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Ruleset/Epic.list
    path: ./ruleset/Epic.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  Origin:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Ruleset/Origin.list
    path: ./ruleset/Origin.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  Sony:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Ruleset/Sony.list
    path: ./ruleset/Sony.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  Steam:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Ruleset/Steam.list
    path: ./ruleset/Steam.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  Nintendo:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Ruleset/Nintendo.list
    path: ./ruleset/Nintendo.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  YouTube:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Ruleset/YouTube.list
    path: ./ruleset/YouTube.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  Netflix:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Ruleset/Netflix.list
    path: ./ruleset/Netflix.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  Bahamut:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Ruleset/Bahamut.list
    path: ./ruleset/Bahamut.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  BilibiliHMT:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Ruleset/BilibiliHMT.list
    path: ./ruleset/BilibiliHMT.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  Bilibili:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Ruleset/Bilibili.list
    path: ./ruleset/Bilibili.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  ChinaMedia:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/ChinaMedia.list
    path: ./ruleset/ChinaMedia.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  ProxyMedia:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/ProxyMedia.list
    path: ./ruleset/ProxyMedia.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  ProxyGFWlist:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/ProxyGFWlist.list
    path: ./ruleset/ProxyGFWlist.list
    behavior: classical
    interval: 86400
    format: text
    type: http
  ChinaDomain:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/ChinaDomain.list
    path: ./ruleset/ChinaDomain.list
    behavior: domain
    interval: 86400
    format: text
    type: http
  ChinaCompanyIp:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/ChinaCompanyIp.list
    path: ./ruleset/ChinaCompanyIp.list
    behavior: ipcidr
    interval: 86400
    format: text
    type: http
  Download:
    url: https://testingcf.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/Download.list
    path: ./ruleset/Download.list
    behavior: classical
    interval: 86400
    format: text
    type: http

rules:
  - "RULE-SET,LocalAreaNetwork,🎯 直连"
  - "RULE-SET,UnBan,🎯 直连"
  - "RULE-SET,BanAD,🛑 广告拦截"
  - "RULE-SET,BanProgramAD,🍃 应用净化"
  - "RULE-SET,GoogleFCM,📢 谷歌FCM"
  - "RULE-SET,GoogleCN,🎯 直连"
  - "RULE-SET,SteamCN,🎯 直连"
  - "RULE-SET,Bing,Ⓜ️ 微软Bing"
  - "RULE-SET,OneDrive,Ⓜ️ 微软云盘"
  - "RULE-SET,Microsoft,Ⓜ️ 微软服务"
  - "RULE-SET,Apple,🍎 苹果服务"
  - "RULE-SET,Telegram,📲 电报消息"
  - "RULE-SET,Twitter,🍎Twitter"
  - "RULE-SET,OpenAi,💬 OpenAi"
  - "RULE-SET,Claude,💬 Claude"
  - "RULE-SET,Gemini,💬 Gemini"
  - "RULE-SET,Emby,🎥 Emby"
  - "RULE-SET,NetEaseMusic,🎶 网易音乐"
  - "RULE-SET,Epic,🎮 游戏平台"
  - "RULE-SET,Origin,🎮 游戏平台"
  - "RULE-SET,Sony,🎮 游戏平台"
  - "RULE-SET,Steam,🎮 游戏平台"
  - "RULE-SET,Nintendo,🎮 游戏平台"
  - "RULE-SET,YouTube,📹 油管视频"
  - "RULE-SET,Netflix,🎥 奈飞视频"
  - "RULE-SET,Bahamut,📺 巴哈姆特"
  - "RULE-SET,BilibiliHMT,📺 哔哩哔哩"
  - "RULE-SET,Bilibili,📺 哔哩哔哩"
  - "RULE-SET,ChinaMedia,🌏 国内媒体"
  - "RULE-SET,ProxyMedia,🌍 国外媒体"
  - "RULE-SET,ProxyGFWlist,🚀 节点选择"
  - "RULE-SET,ChinaDomain,🎯 直连"
  - "RULE-SET,ChinaCompanyIp,🎯 直连"
  - "RULE-SET,Download,🎯 直连"
  - "GEOIP,CN,🎯 直连"
  - "MATCH,🐟 漏网之鱼"